
#!/usr/bin/python
from Adafruit_MCP4725 import MCP4725
import time
import math
import os
os.system('modprobe i2c_bcm2708 baudrate=800000')
def lev(V):
	return int(V/5.0*4095)

centerx = 0.85
centery = 3.65;
dac=MCP4725(0x62)
dacY=MCP4725(0x63)
x=0
mode = 1
try:
	if mode==1:
		# max speed square wave
		begin = time.time()
		while True:
			2
			
			
	elif mode ==2:
		# horizontal line
		speed = 25; 
		print speed, centery
		maxpts = 5000;
		numpts = maxpts/speed
		incx = 4.5/(numpts/2)
		list = []
		iX = -4.5
		while iX < 4.5:
			list.append(abs(iX))
			iX = iX + incx	
		dacY.setVoltage(lev(centery))
		while(True):
			for point in list:
				dac.setVoltage(lev(point))

	elif mode ==3:
		pattern = file('ncsuraster.txt','r')
		patternlist=eval(pattern.read())
		while (True):
			for pair in patternlist:
				dac.setVoltage(int(pair[0]))
				dacY.setVoltage(int(pair[1]))
	elif mode ==4:
		#raster L shape
		#make pattern
		speed = 150;
		maxpts = 2800;
		numpts = maxpts/speed
		l=[]
		minX=.8
		maxX = minX + 2.5
		minY=4
		maxY = minY-2.5
		incX = (maxX-minX)/(numpts/4)
		incY = (maxY-minY)/(numpts/4)
		iX=minX
		iY=minY
		while iX<(maxX):
			l.append([round(iX,5),minY])
			iX=iX+incX
		iX=maxX-incX/2
		while iX > (minX+incX/4):
			l.append([round(iX,5),minY])
			iX=iX-incX
		while iY>(maxY):
			l.append([minX,round(iY,5)])
			iY=iY+incY
		iY=maxY-incY/2
		while iY < (minY+incY/4):
			l.append([minX,round(iY,5)])
			iY=iY-incY
		#run pattern
		ib = 0
		while (ib< 10):
			for pair in l:
				dac.setVoltage(lev(pair[0]))
				dacY.setVoltage(lev(pair[1]))
				print "%.7f" % time.time()
			ib = ib+1
	elif mode ==5:
		dac.setVoltage(lev(3.7))
		dacY.setVoltage(lev(3.95))
		while True:
			time.sleep(1)
	elif mode == 6:
		speedx = 70
		speedy = .001
		maxpts = 2900
		numptsx = maxpts/speedx
		numptsy = maxpts/speedy
		maxX = 4.5
		minX = 0
		maxY = 4.5
		minY = 2
		incx = float(maxX-minX)/(numptsx/2)
		incy = float(maxY-minY)/(numptsy/2)
		listX = []
		listY = []
		print minX, maxX, speedx, minY, maxY, speedy, incx, incy;
		bob = minX
		while bob < maxX:
			listX.append(lev(bob))
			bob = bob + incx
		while bob > minX:
			bob = bob - incx
			listX.append(lev(bob))
		bob = minY
		while bob < maxY:
			listY.append(lev(bob))
			bob = bob + incy
		while bob > minY:
			bob = bob - incy
			listY.append(lev(bob))
		lenX = len(listX)
		lenY = len(listY)
		timer = int(1.0/(min(speedx, speedy))*5*maxpts)
		while (True):
			for i in range(0,timer):
				dac.setVoltage(listX[i % lenX])
				dacY.setVoltage(listY[i % lenY])


except KeyboardInterrupt:
	dac.setVoltage(0)
	dacY.setVoltage(0)


dac.setVoltage(0)
dacY.setVoltage(0)
